# Dataflow Component Properties Rules
# 
# This YAML file contains the validation rules for various components of the dataflow pipeline.
# Each component has its own set of properties that need to be validated according to predefined conditions.
#
# Structure:
# - Each rule set corresponds to a specific component type (e.g., 'oledb_source', 'oracle_source').
# - Each rule set contains a list of property rules.
# - Each property rule specifies:
#   - `condition`: The validation method to apply (e.g., 'equals', 'str_not_empty', 'is_none', 'regex_match').
#   - `value`: The value or pattern used for validation (if applicable).
#     - For conditions like 'equals', `value` is the expected value.
#     - For conditions like 'regex_match', `value` is the regex pattern.
# 
# Example:
# - A property rule could validate if a property value is a non-empty string, or if it matches a specific pattern.
#
# Adding New Rules:
# - To add a new rule for a property, define the `condition` and `value` (if needed) in the relevant section.
# - To add a new condition, define the validation function in the Python code and map it in the `validation_functions` dictionary.


oledb_source:
  AlwaysUseDefaultCodePage: 
    condition: 'equals'
    value: 'false'
  DefaultCodePage:
    condition: 'equals'
    value: '1252'
  SqlCommand:
    condition: 'str_not_empty'
  SqlCommandVariable:
    condition: 'is_none'

oracle_source:
  DefaultCodePage:
    condition: 'equals'
    value: '1256'
  SqlCommand:
    condition: 'str_not_empty'
  BatchSize:
    condition: 'equals'
    value: '100000'

oledb_destination:
  AlwaysUseDefaultCodePage: 
    condition: 'equals'
    value: 'false'
  DefaultCodePage:
    condition: 'equals'
    value: '1256'
  SqlCommand:
    condition: 'is_none'
  FastLoadOptions:
    condition: 'is_none'

multiple_hash:
  MultipleThreads:
    condition: 'equals'
    value: '0'
  SafeNullHandling:
    condition: 'equals'
    value: '1'
  IncludeMillsecond:
    condition: 'equals'
    value: '1'
  HashType:
    condition: 'equals'
    value: '6'
  HashOutputType:
    condition: 'equals'
    value: '0'
